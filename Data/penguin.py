from sqlalchemy import Column, DateTime, ForeignKey, Integer, SmallInteger, String, text, Boolean, CHAR, Time, Interval
from sqlalchemy.orm import relationship

from Data import Base

metadata = Base.metadata

class PenguinDB(Base):
    __tablename__ = 'penguin'

    id = Column(Integer, primary_key=True, server_default=text("nextval('\"penguin_id_seq\"'::regclass)"))
    username = Column(String(12), nullable=False, unique=True)
    nickname = Column(String(30), nullable=False)
    password = Column(CHAR(60), nullable=False)
    email = Column(String(255), nullable=False, index=True)
    registration_date = Column(DateTime, nullable=False, server_default=text("now()"))
    active = Column(Boolean, nullable=False, server_default=text("false"))
    safe_chat = Column(Boolean, nullable=False, server_default=text("false"))
    last_paycheck = Column(DateTime, nullable=False, server_default=text("now()"))
    minutes_played = Column(Integer, nullable=False, server_default=text("0"))
    moderator = Column(Boolean, nullable=False, server_default=text("false"))
    stealth_moderator = Column(Boolean, nullable=False, server_default=text("false"))
    character = Column(ForeignKey('character.id', ondelete='CASCADE', onupdate='CASCADE'))
    igloo = Column(ForeignKey('penguin_igloo_room.id', ondelete='CASCADE', onupdate='CASCADE'))
    coins = Column(Integer, nullable=False, server_default=text("500"))
    color = Column(ForeignKey('item.id', ondelete='CASCADE', onupdate='CASCADE'))
    head = Column(ForeignKey('item.id', ondelete='CASCADE', onupdate='CASCADE'))
    face = Column(ForeignKey('item.id', ondelete='CASCADE', onupdate='CASCADE'))
    neck = Column(ForeignKey('item.id', ondelete='CASCADE', onupdate='CASCADE'))
    body = Column(ForeignKey('item.id', ondelete='CASCADE', onupdate='CASCADE'))
    hand = Column(ForeignKey('item.id', ondelete='CASCADE', onupdate='CASCADE'))
    feet = Column(ForeignKey('item.id', ondelete='CASCADE', onupdate='CASCADE'))
    photo = Column(ForeignKey('item.id', ondelete='CASCADE', onupdate='CASCADE'))
    flag = Column(ForeignKey('item.id', ondelete='CASCADE', onupdate='CASCADE'))
    permaban = Column(Boolean, nullable=False, server_default=text("false"))
    book_modified = Column(SmallInteger, nullable=False, server_default=text("0"))
    book_color = Column(SmallInteger, nullable=False, server_default=text("1"))
    book_highlight = Column(SmallInteger, nullable=False, server_default=text("1"))
    book_pattern = Column(SmallInteger, nullable=False, server_default=text("0"))
    book_icon = Column(SmallInteger, nullable=False, server_default=text("1"))
    agent_status = Column(Boolean, nullable=False, server_default=text("false"))
    field_op_status = Column(SmallInteger, nullable=False, server_default=text("0"))
    career_medals = Column(Integer, nullable=False, server_default=text("0"))
    agent_medals = Column(Integer, nullable=False, server_default=text("0"))
    last_field_op = Column(DateTime, nullable=False, server_default=text("now()"))
    com_message_read_date = Column(DateTime, nullable=False, server_default=text("now()"))
    ninja_rank = Column(SmallInteger, nullable=False, server_default=text("0"))
    ninja_progress = Column(SmallInteger, nullable=False, server_default=text("0"))
    fire_ninja_rank = Column(SmallInteger, nullable=False, server_default=text("0"))
    fire_ninja_progress = Column(SmallInteger, nullable=False, server_default=text("0"))
    water_ninja_rank = Column(SmallInteger, nullable=False, server_default=text("0"))
    water_ninja_progress = Column(SmallInteger, nullable=False, server_default=text("0"))
    ninja_matches_won = Column(Integer, nullable=False, server_default=text("0"))
    fire_matches_won = Column(Integer, nullable=False, server_default=text("0"))
    water_matches_won = Column(Integer, nullable=False, server_default=text("0"))
    rainbow_adoptability = Column(Boolean, nullable=False, server_default=text("false"))
    has_dug = Column(Boolean, nullable=False, server_default=text("false"))
    puffle_handler = Column(Boolean, nullable=False, server_default=text("false"))
    nuggets = Column(SmallInteger, nullable=False, server_default=text("0"))
    walking = Column(ForeignKey('penguin_puffle.id', ondelete='CASCADE', onupdate='CASCADE'))
    opened_playercard = Column(Boolean, nullable=False, server_default=text("false"))
    special_wave = Column(Boolean, nullable=False, server_default=text("false"))
    special_dance = Column(Boolean, nullable=False, server_default=text("false"))
    special_snowball = Column(Boolean, nullable=False, server_default=text("false"))
    map_category = Column(SmallInteger, nullable=False, server_default=text("0"))
    status_field = Column(Integer, nullable=False, server_default=text("0"))
    timer_active = Column(Boolean, nullable=False, server_default=text("false"))
    timer_start = Column(Time, nullable=False, server_default=text("'00:00:00'::time without time zone"))
    timer_end = Column(Time, nullable=False, server_default=text("'23:59:59'::time without time zone"))
    timer_total = Column(Interval, nullable=False, server_default=text("'01:00:00'::interval"))
    grounded = Column(Boolean, nullable=False, server_default=text("false"))
    approval_en = Column(Boolean, nullable=False, server_default=text("false"))
    approval_pt = Column(Boolean, nullable=False, server_default=text("false"))
    approval_fr = Column(Boolean, nullable=False, server_default=text("false"))
    approval_es = Column(Boolean, nullable=False, server_default=text("false"))
    approval_de = Column(Boolean, nullable=False, server_default=text("false"))
    approval_ru = Column(Boolean, nullable=False, server_default=text("false"))
    rejection_en = Column(Boolean, nullable=False, server_default=text("false"))
    rejection_pt = Column(Boolean, nullable=False, server_default=text("false"))
    rejection_fr = Column(Boolean, nullable=False, server_default=text("false"))
    rejection_es = Column(Boolean, nullable=False, server_default=text("false"))
    rejection_de = Column(Boolean, nullable=False, server_default=text("false"))
    rejection_ru = Column(Boolean, nullable=False, server_default=text("false"))
